from telegram import Update
from telegram.ext import CallbackContext
from .outline_api import OutlineVPN
from .config import OUTLINE_API_URL, CERT_SHA256
import os
from .utils import restricted  # –ò–º–ø–æ—Ä—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞
from telegram.helpers import escape_markdown

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OutlineAPI
outline_client = OutlineVPN(OUTLINE_API_URL, CERT_SHA256)

@restricted
async def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    text = f"{
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º Outline.\n\n"
        "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "üîë /list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–ª—é—á–∏.\n"
        "‚ûï /add <–∏–º—è> - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á. –ï—Å–ª–∏ –∏–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n"
        "‚ùå /delete <id> - –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á –ø–æ ID.\n"
        "üìä /limit <–∏–º—è|id|–∫–ª—é—á> - –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –¥–æ –Ω—É–ª—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞.\n"
        "üö´ /rem_limit <–∏–º—è|id|–∫–ª—é—á> - –°–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞.\n"
    }"

    # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Markdown —Å–∏–º–≤–æ–ª–æ–≤
    escaped_text = escape_markdown(text, version=2)

    await update.message.reply_text(escaped_text, parse_mode='MarkdownV2')



@restricted
async def list_keys(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /list"""
    try:
        keys = outline_client.get_keys()
        if not keys:
            await update.message.reply_text("üîì –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π.", parse_mode='Markdown')
            return

        message = "üîë –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π:\n\n"
        messages = []  # –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–∞
        for key in keys:
            key_message = (
                f"üìÑ ID: {getattr(key, 'key_id', '–ù–µ —É–∫–∞–∑–∞–Ω')}, "
                f"üë§ –ò–º—è: {getattr(key, 'name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}, "
                f"üìä –¢—Ä–∞—Ñ–∏–∫: {getattr(key, 'data_limit', '–ù–µ —É–∫–∞–∑–∞–Ω')}, "
                f"üîó –°—Å—ã–ª–∫–∞: `{getattr(key, 'access_url', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}`\n\n"
            )

            # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
            if len(message) > 4000:
                messages.append(message)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
                message = key_message  # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–µ–≥–æ –∫–ª—é—á–∞

            message += key_message

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        if message:
            messages.append(message)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        for msg in messages:
            await update.message.reply_text(msg, parse_mode='Markdown')

    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–ª—é—á–µ–π: {e}", parse_mode='Markdown')

@restricted
async def add_key(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /add"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –æ–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ
        key_name = "–ë–µ–∑ –∏–º–µ–Ω–∏"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if context.args:
            key_name = " ".join(context.args)  # –°–æ–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É

        new_key = outline_client.create_key(name=key_name)  

        # –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
        key_id = new_key.key_id
        access_url = new_key.access_url

        message = (
            "‚úÖ –ù–æ–≤—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"üìÑ ID: {key_id}\n\n"
            f"üîó –°—Å—ã–ª–∫–∞: `{access_url}`\n\n"  # –°—Å—ã–ª–∫–∞ —Ç–µ–ø–µ—Ä—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è
            f"üìù –ò–º—è: {key_name}\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Outline. "
            "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ! üõ°Ô∏è"
        )
        await update.message.reply_text(message, parse_mode='Markdown')  # –£–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Markdown
    except AttributeError as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª—é—á–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞.", parse_mode='Markdown')
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞.", parse_mode='Markdown')

@restricted
async def delete_key(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /delete <id>"""
    if len(context.args) != 1:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /delete <id>")
        return

    key_id = context.args[0]
    try:
        outline_client.delete_key(key_id)  
        await update.message.reply_text(f"‚úÖ –ö–ª—é—á —Å ID {key_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª—é—á–∞.")

@restricted
async def delete_key(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /delete <id>"""
    if len(context.args) < 1:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /rem_limit <–∏–º—è|id|–∫–ª—é—á>")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, ID –∏–ª–∏ –∫–ª—é—á)
    input_value = " ".join(context.args)  # –°–æ–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã)
    try:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        keys = outline_client.get_keys()
        key = None

        # –ò—â–µ–º –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        for k in keys:
            if getattr(k, 'name', '').lower() == input_value.lower():
                key = k
                break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ ID
        if not key:
            for k in keys:
                if str(k.key_id) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –∏ ID –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –∫–ª—é—á—É
        if not key:
            for k in keys:
                if str(k.access_url) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –µ–≥–æ —Ç—Ä–∞—Ñ–∏–∫
        if key:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç—Ä–∞—Ñ–∏–∫ –¥–æ –Ω—É–ª—è
            status = outline_client.delete_key(key.key_id)  
            await update.message.reply_text(f"‚úÖ –ö–ª—é—á —Å ID {key.key_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª—é—á–∞.")

@restricted
async def limit_traffic(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /limit, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Ç—Ä–∞—Ñ–∏–∫ –¥–æ –Ω—É–ª—è."""
    if len(context.args) < 1:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /rem_limit <–∏–º—è|id|–∫–ª—é—á>")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, ID –∏–ª–∏ –∫–ª—é—á)
    input_value = " ".join(context.args)  # –°–æ–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã)
    try:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        keys = outline_client.get_keys()
        key = None

        # –ò—â–µ–º –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        for k in keys:
            if getattr(k, 'name', '').lower() == input_value.lower():
                key = k
                break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ ID
        if not key:
            for k in keys:
                if str(k.key_id) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –∏ ID –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –∫–ª—é—á—É
        if not key:
            for k in keys:
                if str(k.access_url) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –µ–≥–æ —Ç—Ä–∞—Ñ–∏–∫
        if key:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç—Ä–∞—Ñ–∏–∫ –¥–æ –Ω—É–ª—è
            status = outline_client.add_data_limit(key.key_id, 0)
            await update.message.reply_text(f"‚úÖ –¢—Ä–∞—Ñ–∏–∫ –¥–ª—è –∫–ª—é—á–∞ {key.key_id} –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ –Ω—É–ª—è.")
        else:
            await update.message.reply_text("‚ö†Ô∏è –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
    
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞.")

@restricted
async def remove_limit(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /remove, —Å–Ω–∏–º–∞–µ—Ç –ª–∏–º–∏—Ç —Å —Ç—Ä–∞—Ñ–∏–∫–∞."""
    if len(context.args) < 1:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /rem_limit <–∏–º—è|id|–∫–ª—é—á>")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è, ID –∏–ª–∏ –∫–ª—é—á)
    input_value = " ".join(context.args)  # –°–æ–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã)
    try:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        keys = outline_client.get_keys()
        key = None

        # –ò—â–µ–º –∫–ª—é—á –ø–æ –∏–º–µ–Ω–∏
        for k in keys:
            if getattr(k, 'name', '').lower() == input_value.lower():
                key = k
                break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ ID
        if not key:
            for k in keys:
                if str(k.key_id) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –ø–æ –∏–º–µ–Ω–∏ –∏ ID –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –∫–ª—é—á—É
        if not key:
            for k in keys:
                if str(k.access_url) == input_value:
                    key = k
                    break

        # –ï—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω, —Å–Ω–∏–º–∞–µ–º –ª–∏–º–∏—Ç —Å —Ç—Ä–∞—Ñ–∏–∫–∞
        if key:
            # –°–Ω–∏–º–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–∞—Ñ–∏–∫
            status = outline_client.delete_data_limit(key.key_id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é delete_data_limit –¥–ª—è —Å–Ω—è—Ç–∏—è –ª–∏–º–∏—Ç–∞
            await update.message.reply_text(f"‚úÖ –õ–∏–º–∏—Ç –Ω–∞ —Ç—Ä–∞—Ñ–∏–∫ –¥–ª—è –∫–ª—é—á–∞ {key.key_id} —Å–Ω—è—Ç.")
        else:
            await update.message.reply_text("‚ö†Ô∏è –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
    
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞.")